package Kotlin_Essentials_and_Testing

//An instance is simply an object thatâ€™s created from a class.
//
//Class = Blueprint
//
//Instance = Actual object created from that blueprint

class Car(val brand: String, val year: Int) {
    fun drive() {
        println("Driving $brand from $year ðŸš—")
    }
}

fun main() {
    // Creating instances (objects) of Car
    val car1 = Car("Tesla", 2023)
    val car2 = Car("Toyota", 2018)

    // Using the instances
    car1.drive()  // Driving Tesla from 2023 ðŸš—
    car2.drive()  // Driving Toyota from 2018 ðŸš—
}
// ðŸ‘‰ In Compose, instances are often used for state management, UI components, or data models.

//Difference Instance and Object in Kotlin Terms
//
//Instance â†’ Any object created from a class. You can create multiple.
//
//Object (keyword) â†’ Special construct in Kotlin for singletons or anonymous classes.

//Quick Analogy
//
//Class â†’ Blueprint of a car.
//
//Instance / Object â†’ Actual car built from the blueprint.
//
//object keyword in Kotlin â†’ Government gives you exactly one official car ðŸš—, no matter how many times you ask.
//
//ðŸ‘‰ So:
//
//In general OOP talk â†’ object = instance (same thing).
//
//In Kotlin keyword object â†’ it means a singleton (special case).